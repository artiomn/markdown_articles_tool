# This file configures https://pre-commit.com/
# Based on pre-commit hooks in
#   https://github.com/pre-commit/pre-commit-hooks
#   https://github.com/jumanjihouse/pre-commit-hooks
# to use specific hooks and options.
fail_fast: false

repos:
  #
  # Common
  #
  - repo: https://github.com/pre-commit/pre-commit-hooks
    rev: "v4.4.0"
    hooks:
      - id: check-case-conflict
      - id: trailing-whitespace
        exclude: \.output
      - id: end-of-file-fixer
        exclude: \.(cp?p?$|output)
      - id: check-added-large-files
      - id: check-executables-have-shebangs
      - id: check-shebang-scripts-are-executable
      - id: check-yaml
      - id: check-toml

  #
  # Git.
  #
  - repo: https://github.com/pre-commit/pre-commit-hooks
    rev: "v4.4.0"
    hooks:
      - id: check-merge-conflict
      # - id: no-commit-to-branch

  #
  # Python
  #
  - repo: https://github.com/pre-commit/pre-commit-hooks
    rev: "v4.4.0"
    hooks:
      - id: debug-statements
      - id: check-docstring-first
      - id: requirements-txt-fixer

  - repo: https://github.com/PyCQA/autoflake
    rev: v2.0.0
    hooks:
      - id: autoflake
        exclude: &fixtures tests(/\w*)*/functional/|tests/input|doc/data/messages|tests(/\w*)*data/
        args:
          - --in-place
          - --remove-all-unused-imports
          - --expand-star-imports
          - --remove-duplicate-keys
          - --remove-unused-variables

  - repo: https://github.com/pycqa/pylint
    rev: "v2.15.9"  # pylint-2.14.5
    hooks:
      - id: pylint
        args: ["-rn", "-sn", "--rcfile=.pylintrc", "--fail-on=I", "--load-plugins=pylint.extensions.docparams"]
        exclude: tests(/\w*)*/functional/|tests/input|tests(/\w*)*data/|doc/
      - id: pylint
        alias: pylint-with-spelling
        args: ["-rn", "-sn", "--rcfile=.pylintrc", "--fail-on=I", "--spelling-dict=en,ru"]
        exclude: tests(/\w*)*/functional/|tests/input|tests(/\w*)*data/|doc/
        stages: [manual]
  - repo: https://github.com/PyCQA/flake8
    rev: 6.0.0
    hooks:
      - id: flake8
        args: ["--config", ".flake8"]
        additional_dependencies:
          [flake8-bugbear==22.12.6, flake8-typing-imports==1.14.0]
        exclude: ".*fixtures"

  - repo: https://github.com/pre-commit/pre-commit
    rev: v2.20.0
    hooks:
      - id: validate_manifest

  - repo: https://github.com/pre-commit/mirrors-mypy
    rev: v0.991
    hooks:
      - id: mypy
        args: ["--config-file", ".mypy.ini", "--install-types"]
        additional_dependencies:
          [
            "isort>=5",
            "platformdirs==2.2.0",
            "py==1.11",
            "tokenize-rt==3.2.0",
            "tomlkit>=0.10.1",
            "types-pkg_resources==0.1.3",
            "types-all",
            "types-attrs",
            "types-requests",
            "types-dataclasses>=0.1.3",
            "types-PyYAML",
            "types-typed-ast>=1.4.1"
          ]
#        exclude: tests(/\w*)*/functional/|tests/input|tests(/.*)+/conftest.py|doc/data/messages|tests(/\w*)*data/

  - repo: https://github.com/asottile/pyupgrade
    rev: v3.3.1
    hooks:
      - id: pyupgrade

  - repo: https://github.com/ambv/black
    rev: "22.12.0"
    hooks:
      - id: black
        args: ["-l", "120", "--skip-string-normalization"]

#  - repo: https://github.com/DanielNoord/pydocstringformatter
#    rev: v0.7.2
#    hooks:
#      - id: pydocstringformatter
#        exclude: *fixtures
#        args: ["--max-summary-lines=2", "--linewrap-full-docstring"]

  - repo: https://github.com/PyCQA/bandit
    rev: 1.7.4
    hooks:
      - id: bandit
        args: ["-r", "-lll"]
        exclude: ".*fixtures"


#  - repo: https://github.com/pycqa/isort
#    rev: 5.12.0
#    hooks:
#      - id: isort

  #
  # Markdown
  #

  # Written on Ruby, but we don't want to install gem.
  # - repo: https://github.com/markdownlint/markdownlint
  #  rev: "v0.12.0"
  #  hooks:
  #    - id: markdownlint

  - repo: https://github.com/executablebooks/mdformat
    rev: "0.7.16"
    hooks:
     - id: mdformat
